pipeline {
    agent any 
    
   parameters{
		choice(name:"github", choices:["none","github"], description:"we have to select to get code from github or not..")
		choice(name:"reponame", choices:["none","maven-web","gradle-war"], description:"we can select repos names")
        choice(name:"branchname", choices:["none","master","development"], description: "we can select gitbranchs name")
        choice(name:"mavenversion", choices: ["none","maven3.6.3","maven3.8.4"],description: "we can select maven version")
        choice(name:"build", choices:["none","run"], description:"we can run or skip this stage")
        choice(name:"gradlebuild", choices:["none","run"], description:"we can run or skip this stage")
        choice(name:"sonarqubecommand", choices:["none","run"], description:"we can run or skip this stage")
        choice(name:"nexuscommand", choices:["none","run"], description:"we can run or skip this stage")
        choice(name:"tomcatcommand", choices:["none","run"], description:"we can run or skip this stage")
   }
  
    stages {
        stage ('github code') {
		when{ 
              expression {"${github}" == 'github' } }
            steps {
               git branch: '${branchname}', credentialsId: '8707530d-7105-4261-8e79-46d0972584d0', url: 'https://github.com/ummar-DevOps/${reponame}.git'
            }
        }
		stage ('build') {
		    tools {
        maven "${mavenversion}"}
		when{ 
              expression {"${build}" == 'run' } }
            steps {
               sh "mvn clean package"
            }
        }
        stage ('gradle build') {
            when{
                expression {"${gradlebuild}" == 'run'}
            }
            steps{
                sh "./gradlew build"
            }
        }
        stage ('execute sonarqube report'){
           when{ 
              expression {"${sonarqubecommand}" == 'run' } }
           steps{
              
               sh "mvn sonar:sonar"
           }
       }
       stage ('artifact upload to nexus'){
           when{ 
              expression {"${nexuscommand}" == 'run' } }
           steps{
               sh "mvn deploy"
           }
           
       }
       stage ('application deploy in tomcat'){
           when{ 
              expression {"${tomcatcommand}" == 'run' } }
            steps{
               sshagent(['4ee68e36-325b-4d18-b232-cd78daa53e67']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.6.40.57:/opt/apache-tomcat-9.0.56/webapps/"
}
           }
       }
    }
}
